// <auto-generated />
using Common.Models.Additional;
using DataLayer.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Drone", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacteristicsId");

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("CharacteristicsId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("Common.Models.DroneCharacteristics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("MaxAvailableWeigth");

                    b.Property<double>("MaxSpeed");

                    b.Property<int>("Type");

                    b.Property<double>("Weigth");

                    b.HasKey("Id");

                    b.ToTable("DroneCharacteristicsSet");
                });

            modelBuilder.Entity("Common.Models.DronePositionSnapshot", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Altitude");

                    b.Property<string>("DroneId");

                    b.Property<string>("Longitude");

                    b.Property<double>("Radius");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.ToTable("DronePositionSnapshots");
                });

            modelBuilder.Entity("Common.Models.MapZone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Altitude");

                    b.Property<int>("FigureType");

                    b.Property<string>("Longitude");

                    b.Property<double>("Size");

                    b.HasKey("Id");

                    b.ToTable("MapZones");
                });

            modelBuilder.Entity("Common.Models.Person", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("Common.Models.Zone", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MapZoneId");

                    b.Property<string>("OwnerId");

                    b.Property<string>("PersonId");

                    b.Property<int>("SettingsId");

                    b.HasKey("Id");

                    b.HasIndex("MapZoneId");

                    b.HasIndex("PersonId");

                    b.HasIndex("SettingsId");

                    b.ToTable("RegisteredZones");
                });

            modelBuilder.Entity("Common.Models.ZoneSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("ZoneSettingsSet");
                });

            modelBuilder.Entity("Common.Models.Drone", b =>
                {
                    b.HasOne("Common.Models.DroneCharacteristics", "Characteristics")
                        .WithMany()
                        .HasForeignKey("CharacteristicsId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Models.Person", "Owner")
                        .WithMany("Drones")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Common.Models.Zone", b =>
                {
                    b.HasOne("Common.Models.MapZone", "MapZone")
                        .WithMany()
                        .HasForeignKey("MapZoneId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Models.Person")
                        .WithMany("Zones")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Common.Models.ZoneSettings", "Settings")
                        .WithMany()
                        .HasForeignKey("SettingsId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Common.Models.ZoneSettings", b =>
                {
                    b.HasOne("Common.Models.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
